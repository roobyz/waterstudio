map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
}

# Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    proxy_http_version          1.1;
    server_name                 waterstudio;
    root                        /usr/lib/rstudio-server/www;
    include                     /etc/nginx/ssl_options.conf;
    
    location /shiny/ {
      rewrite ^/shiny/(.*)$ /$1 break;
      proxy_pass http://localhost:3838;
      proxy_redirect http://localhost:3838/ $scheme://$host/shiny/;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_read_timeout 20d;
      access_log /var/log/nginx/shiny-access.log;
      error_log  /var/log/nginx/shiny-error.log;
    }

    location /shiny-admin/ {
      rewrite ^/shiny-admin/(.*)$ /$1 break;
      proxy_pass http://localhost:4151;
      proxy_redirect http://localhost:4151/ $scheme://$host/shiny-admin/;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_read_timeout 20d;
    }
    
    location /rstudio/ {
      rewrite ^/rstudio/(.*)$ /$1 break;
      proxy_pass http://localhost:8787/;
      
      # with a redirect to $scheme://$http_host 
      # links are constructed using client host,
      # so also tunnels works (eg. localhost:10080)
      proxy_redirect http://localhost:8787/ $scheme://$host/rstudio/;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_read_timeout 20d;
      access_log /var/log/nginx/rstudio-access.log;
      error_log  /var/log/nginx/rstudio-error.log;
    }
    
    # The following allows for H2O Flow access once the R library has been loaded.
    location /flow/ {
      proxy_pass http://localhost:54321/flow/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      access_log /var/log/nginx/h2o-access.log;
      error_log  /var/log/nginx/h2o-error.log;
    }
    location /3/ {
      proxy_pass http://localhost:54321/3/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      access_log /var/log/nginx/h2o-access.log;
      error_log  /var/log/nginx/h2o-error.log;
    }
    location /99/ {
      proxy_pass http://localhost:54321/99/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Upgrade $http_upgrade;
      access_log /var/log/nginx/h2o-access.log;
      error_log  /var/log/nginx/h2o-error.log;
    }
}
